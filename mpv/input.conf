UP seek +60
DOWN seek -60
RIGHT seek +5 - exact
LEFT seek -5 - exact
PGUP seek 600
PGDWN seek -600
KP6 add chapter 1
KP4 add chapter -1

1 add contrast -5
2 add contrast 5
3 add brightness -5
4 add brightness 5
5 add gamma -5
6 add gamma 5
7 add saturation -5
8 add saturation 5

# Left click
MOUSE_BTN0 show_text "${time-pos} / ${length} (${percent-pos}%)"
MOUSE_BTN0_DBL cycle fullscreen
# Wheel click
MOUSE_BTN1 show_text "${filename}"
# Right click
MOUSE_BTN2 cycle pause
# Wheel up
MOUSE_BTN3 add volume +1
MOUSE_BTN3_DBL add volume +1
MOUSE_BTN3-MOUSE_BTN3_DBL add volume +1
# Wheel down
MOUSE_BTN4 add volume -1
MOUSE_BTN4_DBL add volume -1
MOUSE_BTN4-MOUSE_BTN4_DBL add volume -1

s screenshot video # without subtitles
S screenshot       # with subtitles

KP0 osd ; osd
ENTER cycle fullscreen
KP_ENTER cycle fullscreen ; set pause no
KP_DEC cycle sub

ESC quit

# R sub_reload




-- Automatically download subtitles in mpv using subliminal
-- default keybinding: b
-- add the following to your input.conf to change the default keybinding:
-- keyname script_binding auto_load_subs
local utils = require 'mp.utils'
function load_sub_fn()
    subl = "/usr/bin/subliminal" -- use 'which subliminal' to find the path
    mp.msg.info("Searching subtitle")
    mp.osd_message("Searching subtitle")
    t = {}
    t.args = {subl, "-q", "-s", "-l", "en", "--", mp.get_property("path")}
    res = utils.subprocess(t)
    if res.status == 0 then
        mp.commandv("rescan_external_files", "reselect")
        mp.msg.info("Subtitle download succeeded")
        mp.osd_message("Subtitle download succeeded")
    else
        mp.msg.warn("Subtitle download failed")
        mp.osd_message("Subtitle download failed")
    end
end

mp.add_key_binding("b", "auto_load_subs", load_sub_fn)

