------------
---pacman---
------------
$ pacman -S FOO     # Install package FOO
$ pacman -Sg gnome  # See what packages belong to the gnome group
$ pacman -Ss FOO    # Search for FOO in package database
$ pacman -Qs FOO    # Search for already installed packages
$ pacman -Si FOO    # Display information about package
$ pacman -Qi FOO    # Display information about installed package
$ pacman -Qii FOO   # Same as above + information about backup files
$ pacman -Ql FOO    # Retrieve list of the files installed by package
$ pacman -Qo ./file # Query the database to see which package
                    # a file in the system belongs to
$ pacman -Qdt       # List orphaned packages
$ pacman -Syu       # Update all packages
$ pacman -Syu FOO   # Update all packages and then install new ones
$ pacman -Sw FOO    # Download package without installing it
$ pacman -Sg FOO    # View all packages in a specified group
$ pacman -Sc        # Clean package cache of packages
                    # that are not currently installed
$ pacman -Scc       # Clear entire package cache
$ pacman -U ./FOO   # Install localy built packages
$ pacman -R FOO     # Remove package
$ pacman -Rs FOO    # Remove package and any of its dependancies
                    # which are not required by any other package
$ pacman -Rs $(pacman -Qdtq)    # Remove all orphaned packages
$ pacman -Rn FOO    # Remove package without creating .pacsave backups
$ pacman -Qm        # List all foreign (AUR) packages
$ pactree FOO       # List dependency tree of a package
$ whoneeds FOO      # List packages depending on a FOO

# Do not refresh the package list without upgrading system
# Like "pacman -Sy FOO" or "pacman -Sy; pacman -S FOO"
# This can lead to dependency issues

---------
---Git---
---------
$ git init                     # Initialize a new git repository
$ git clone <repo>             # Clone repository to local machine
$ git status                   # Current repository status
$ git log                      # Show commit history
$ git add <file>               # Add new file, "stage" it.
$ git add .                    # "Stage" all changes
$ git rm <file>                # Remove file from repository
$ git diff HEAD                # View all changes before commiting
$ git commit -a -m "comment"   # "Stage" and commit all changes (locally)
$ git push origin master       # Upload changes
$ git pull origin master       # Download changes
$ git fetch origin             # Update local remote to the latest version
$ git checkout <file>          # Revert changes in file to last commit

1. Create repo on github
2. Go to local repo folder
3. Add a remote named origin
    $ git remote add origin git@github.com:<user>/<repo>.git
4. Push commits in master branch
    $ git push -u origin master
5. To pull changes from the origin repo:
    $ git pull origin master

----------
---tmux---
----------
$ tmux new-sesion -s 'my project'   # Creating named session
$ tmux -L moo                       # Create or attach to a session "moo"
$ tmux -L moo attach                # Attach to a session "moo"

Prefix + $      # Rename current session
Prefix + (      # Switch to the previous session
Prefix + )      # Switch to the next session
Prefix + L      # Switch to the last session
Prefix + s      # Interactive session switch

Prefix + ,      # Rename current window
Prefix + p      # Swith to the previous window
Prefix + n      # Swith to the next window
Prefix + l      # Switch to the last window
Prefix + w      # Interactive windows switch
Prefix + 1      # Switch to the first window
Prefix + 2      # Switch to the second window and so on...
Prefix + '      # Switch to the window with index greater than 9
Prefix + f      # Switch to the windows by name
Prefix + c      # Create new window at the first open index
Prefix + .      # Prompt for an index to move current window to

Prefix + space  # Switch layout of panes

1. To copy text between tmux panes press
   Prefix + [
2. Navigate to start of the selection with hjkl
3. Start selection with v
4. Yank selection with y

----------
---Time---
----------
$ ntpd -ds      # Sync time without starting NTP daemon
$ hwclock -w    # Save updated time in hardware clock

--------------
---Wireless---
--------------
$ iw dev WI-FI link             # Getting status of wlan0
# ip link set WI-FI up          # Enable specified interface
$ sudo iw dev WI-FI scan | less # Scan wireless access points
$ iw WI-FI set channel auto     # Automatic channel selection (interface must be down)
$ iw WI-FI connect SSID         # Connect to access point without encryption
$ iw WI-FI connest SSID 2432    # Connect to AP on frequency 2432
$ iw WI-FI connect SSID keys 0:abcde d:1:0011223344     # Connect to AP using WEP
$ iw WI-FI disconnect           # Disconnect from current network
---Wireless using netctl profiles
$ netctl start PROFILENAME      # Connect using specified profile
                                # Profiles are stored in "/etc/netctl"
                                # Examples are in "etc/netctl/examples"
---for DHCP---
$ dhcpcd wlan0
---for static---
    # DNS addresses are added in /etc/resolv.conf
$ ip link set IF up
$ ip addr add 192.168.0.2/24 dev wlan0
$ ip route add default via 192.168.0.1
---flush assigned ip and gateway---
$ ip addr flush dev IF
$ ip route flush dev IF

-----------------
---Taskwarrior---
-----------------
$ task add Some task      # Add task to taskwarrior
$ task list               # Show tasks
$ task ID done            # Finish task with id 3
$ task ID start           # Mark task as started

---------
---SQL---
---------
$ systemctl start mariadb   # to start sql server
$ mysql -u root -p          # to connect to the sql server

----------------
---Copy-Paste---
----------------
$ cat FILE.TXT | xsel -i    # Copy piped text into X buffer
$ xsel -o > FILE.TXT        # Paste from X buffer

--------------
---Touchpad---
--------------
# xinput                # To find touchpad name and id
$ xinput disable "SynPS/2 Synaptics TouchPad"       # Disable touchpad by name
$ xinput --list-props "SynPS/2 Synaptics TouchPad"  # View all properties

-----------
---Video---
-----------
$ mplayer tv:// -tv driver=v4l2:width=640:height=480:device=/dev/video0

-----------
---Audio---
-----------
# flac to wav
for i in *.flac ; do flac -d $i ; done

# wav to hq variable bitrate mp3
for i in *.wav ; do lame -V 0 $i ; done

-----------
---Logs----
-----------
/var/log/pacman.log     # Logged pacman's output

-------------------
---Naked console---
-------------------
$ setfont cyr-sun16     # Change console font to one that supports cyrillic

----------
---Misc---
----------
# Mount block device
udisksctl mount --block-device /dev/sdb1
udisksctl unmount --block-device /dev/sdb1

# Convert text files to utf-8 encoding
enca -L ru -c -x UTF-8 *.txt

# Preload library
LD_PRELOAD=/path/to/my/malloc.so /bin/ls
LD_LIBRARY_PATH=/path/to/libs ./program

# Check needed libraries
ldd ./program

# Start program and free terminal
(tint2 & sleep 5s) & exit

# Record desktop
ffmpeg -f x11grab -s 1680x1050 -r 8 -i :0.0 -qscale 0 film.mkv

# Get list of formats from youtube video
youtube-dl -F URL
# Download video in max quality
youtube-dl --max-quality FORMAT -t URL

# Auto-zoom, fullscreen, recursive, random order in feh
feh -ZFrz .

